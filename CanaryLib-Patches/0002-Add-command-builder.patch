From b20f10bbd603e36a742c51241f87a3dbecb87202 Mon Sep 17 00:00:00 2001
From: Jamie Mansfield <dev@jamierocks.uk>
Date: Thu, 1 Sep 2016 16:53:01 +0100
Subject: [PATCH] Add command builder


diff --git a/src/main/java/org/neptunepowered/lib/command/CommandBuilder.java b/src/main/java/org/neptunepowered/lib/command/CommandBuilder.java
new file mode 100644
index 0000000..c4f91a4
--- /dev/null
+++ b/src/main/java/org/neptunepowered/lib/command/CommandBuilder.java
@@ -0,0 +1,123 @@
+/*
+ * This file is part of NeptuneLib, licensed under the MIT License (MIT).
+ *
+ * Copyright (c) 2016, Jamie Mansfield <https://www.jamierocks.uk/>
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
+ */
+
+package org.neptunepowered.lib.command;
+
+import static com.google.common.base.Preconditions.checkNotNull;
+
+import net.canarymod.chat.MessageReceiver;
+import net.canarymod.commandsys.CanaryCommand;
+import net.canarymod.commandsys.CommandOwner;
+import net.canarymod.commandsys.DynamicCommandAnnotation;
+import net.canarymod.commandsys.TabCompleteDispatch;
+
+/**
+ * A builder for creating commands.
+ *
+ * @author Jamie Mansfield (jamierocks)
+ */
+public final class CommandBuilder {
+
+    private final CommandOwner owner;
+    private String[] aliases;
+    private String description;
+    private String toolTip;
+    private CommandExecutor executor;
+    private TabCompleteDispatch tabComplete = null;
+    private String[] permissions = new String[]{};
+
+    public CommandBuilder(CommandOwner owner) {
+        this.owner = owner;
+    }
+
+    public CommandBuilder aliases(String... aliases) {
+        checkNotNull(aliases, "aliases is null!");
+        this.aliases = aliases;
+        return this;
+    }
+
+    public CommandBuilder description(String description) {
+        checkNotNull(description, "description is null!");
+        this.description = description;
+        return this;
+    }
+
+    public CommandBuilder toolTip(String toolTip) {
+        checkNotNull(toolTip, "toolTip is null!");
+        this.toolTip = toolTip;
+        return this;
+    }
+
+    public CommandBuilder executor(CommandExecutor executor) {
+        checkNotNull(executor, "executor is null!");
+        this.executor = executor;
+        return this;
+    }
+
+    public CommandBuilder tabComplete(TabCompleteDispatch tabComplete) {
+        checkNotNull(tabComplete, "tabComplete is null!");
+        this.tabComplete = tabComplete;
+        return this;
+    }
+
+    public CommandBuilder permissions(String... permissions) {
+        checkNotNull(permissions, "permissions is null!");
+        this.permissions = permissions;
+        return this;
+    }
+
+    public CanaryCommand build() {
+        if (this.aliases == null || this.description == null || this.toolTip == null || this.executor == null) {
+            checkNotNull(this.aliases, "aliases is null!");
+            checkNotNull(this.description, "description is null!");
+            checkNotNull(this.toolTip, "toolTip is null!");
+            checkNotNull(this.executor, "executor is null!");
+        }
+
+        return new CanaryCommand(
+                new DynamicCommandAnnotation(
+                        this.aliases,     // aliases
+                        this.permissions, // permissions
+                        this.description, // description
+                        this.toolTip,     // toolTip
+                        "",               // parent
+                        "",               // helpLookup
+                        new String[] {},  // searchTerms
+                        0,                // min
+                        -1,               // max
+                        "",               // tabCompleteMethod
+                        1                 // version
+                ),               // meta
+                this.owner,      // owner
+                null,            // translator
+                this.tabComplete // tabComplete
+        ) {
+            @Override
+            protected void execute(MessageReceiver caller, String[] parameters) {
+                CommandBuilder.this.executor.execute(caller, parameters);
+            }
+        };
+    }
+
+}
diff --git a/src/main/java/org/neptunepowered/lib/command/CommandExecutor.java b/src/main/java/org/neptunepowered/lib/command/CommandExecutor.java
new file mode 100644
index 0000000..33767c6
--- /dev/null
+++ b/src/main/java/org/neptunepowered/lib/command/CommandExecutor.java
@@ -0,0 +1,44 @@
+/*
+ * This file is part of NeptuneLib, licensed under the MIT License (MIT).
+ *
+ * Copyright (c) 2016, Jamie Mansfield <https://www.jamierocks.uk/>
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
+ */
+
+package org.neptunepowered.lib.command;
+
+import net.canarymod.chat.MessageReceiver;
+
+/**
+ * Interface for command executors.
+ *
+ * @author Jamie Mansfield (jamierocks)
+ */
+public interface CommandExecutor {
+
+    /**
+     * Executes a command.
+     *
+     * @param caller The command caller
+     * @param parameters The command parameters
+     */
+    void execute(MessageReceiver caller, String[] parameters);
+
+}
-- 
2.8.2

